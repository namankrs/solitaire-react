{"version":3,"sources":["Card.js","deckGenerator.js","CardView.js","Tableau.js","Foundations.js","WastePiles.js","Game.js","index.js"],"names":["Card","suite","color","number","unicode","Object","classCallCheck","this","isOpen","card","deckGenerator","suites","spade","heart","diamond","club","deck","keys","forEach","unicodePrefix","cardNumber","toString","toUseCardNumber","push","shuffle","CardView","event","dataTransfer","setData","target","id","_this$props","props","onClick","draggable","className","react_default","a","createElement","key","onDragStart","drag","bind","style","getColor","dangerouslySetInnerHTML","__html","concat","getUnicode","Component","TableauView","preventDefault","pileIndex","cardIndex","src_CardView","toRenderPile","onDragOver","allowDrop","onDrop","dropOnPile","_this","toRenderPiles","piles","map","pile","generateCard","generatePile","React","Foundations","dropOnFoundations","foundationPiles","foundationPile","slice","generateFoundation","WastePiles","onclick","wastePile","resetWastePile","handleWastePile","toRenderWastePiles","wastePiles","Game","possibleConstructorReturn","getPrototypeOf","call","state","setStates","deckCopy","pileCount","cardCount","shift","open","setState","length","faceOnWastePile","reverse","clickedCard","pop","lastCard","last","canBePlacedForPile","isKing","draggedCard","_canBePlayedOnPile","toDropCardIndexes","dragPileIndex","dragCardIndex","draggedCards","remainingCards","getData","split","_dropOnPileFromWaste","_dropOnPileFromPile","foundationIndex","_canBeDroppedOnFoundation","canBePlacedForFoundation","isAce","pileLength","_dropOnFoundationFromWaste","_dropOnFoundationFromPile","reduce","b","document","getElementById","visibility","hasWon","src_WastePiles","src_Foundations","Tableau","ReactDOM","render","src_Game"],"mappings":"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","file":"static/js/main.a3bf2134.chunk.js","sourcesContent":["class Card {\n  constructor(suite, color, number, unicode) {\n    this.suite = suite;\n    this.color = color;\n    this.number = number;\n    this.unicode = unicode;\n    this.isOpen = false;\n  }\n\n  getColor() {\n    if (this.isOpen) return this.color;\n    return \"black\";\n  }\n\n  getUnicode() {\n    if (this.isOpen) return this.unicode;\n    return \"&#x1F0A0\";\n  }\n\n  open() {\n    this.isOpen = true;\n  }\n\n  draggable() {\n    return this.isOpen;\n  }\n\n  isAce() {\n    return this.number === 1;\n  }\n\n  isKing() {\n    return this.number === 13;\n  }\n\n  canBePlacedForPile(card) {\n    return this.number === card.number + 1 && this.color !== card.color;\n  }\n\n  canBePlacedForFoundation(card) {\n    return (\n      this.number === card.number - 1 &&\n      this.color === card.color &&\n      this.suite === card.suite\n    );\n  }\n}\n\nexport default Card;\n","import Card from \"./Card\";\nimport { shuffle } from \"lodash\";\n\nfunction deckGenerator() {\n  const suites = {\n    spade: { color: \"black\", unicode: \"&#x1F0A\" },\n    heart: { color: \"red\", unicode: \"&#x1F0B\" },\n    diamond: { color: \"red\", unicode: \"&#x1F0C\" },\n    club: { color: \"black\", unicode: \"&#x1F0D\" }\n  };\n  const deck = [];\n\n  Object.keys(suites).forEach(suite => {\n    const color = suites[suite].color;\n    const unicodePrefix = suites[suite].unicode;\n    for (let cardNumber = 1; cardNumber <= 14; cardNumber++) {\n      let unicode = unicodePrefix + cardNumber.toString(16);\n      if (cardNumber === 12) continue;\n      let toUseCardNumber = cardNumber;\n      if (cardNumber > 12) toUseCardNumber = cardNumber - 1;\n      deck.push(new Card(suite, color, toUseCardNumber, unicode));\n    }\n  });\n  return shuffle(deck);\n}\n\nexport default deckGenerator;\n","import { Component } from \"react\";\nimport React from \"react\";\n\nclass CardView extends Component {\n  drag(event) {\n    event.dataTransfer.setData(\"text\", event.target.id);\n  }\n\n  render() {\n    const { onClick, id, draggable, className, card } = this.props;\n    return (\n      <div\n        key={id}\n        id={id}\n        draggable={draggable}\n        onDragStart={this.drag.bind(this)}\n        className={className}\n        onClick={onClick}\n        style={{ color: card.getColor() }}\n        dangerouslySetInnerHTML={{\n          __html: `${card.getUnicode()}`\n        }}\n      />\n    );\n  }\n}\n\nexport default CardView;\n","import React from \"react\";\nimport CardView from \"./CardView\";\n\nclass TableauView extends React.Component {\n  allowDrop(event) {\n    event.preventDefault();\n  }\n\n  generateCard(pileIndex, card, cardIndex) {\n    return (\n      <CardView\n        id={pileIndex + \"_\" + cardIndex}\n        draggable={card.draggable()}\n        className=\"card\"\n        card={card}\n      />\n    );\n  }\n\n  generatePile(pileIndex, toRenderPile) {\n    return (\n      <div\n        id={pileIndex}\n        onDragOver={this.allowDrop.bind(this)}\n        onDrop={this.props.dropOnPile.bind(null, pileIndex)}\n        className=\"pile-column\"\n      >\n        {toRenderPile}\n      </div>\n    );\n  }\n\n  render() {\n    const toRenderPiles = this.props.piles.map((pile, pileIndex) => {\n      const toRenderPile = pile.map(this.generateCard.bind(null, pileIndex));\n      return this.generatePile(pileIndex, toRenderPile);\n    });\n    return <div className=\"piles\"> {toRenderPiles}</div>;\n  }\n}\n\nexport default TableauView;\n","import React from \"react\";\nimport CardView from \"./CardView\";\n\nclass Foundations extends React.Component {\n  allowDrop(event) {\n    event.preventDefault();\n  }\n\n  generateCard(pileIndex, card, cardIndex) {\n    return (\n      <CardView\n        id={pileIndex + \"_\" + cardIndex}\n        className=\"foundation-pile-card\"\n        card={card}\n      />\n    );\n  }\n\n  generateFoundation(pileIndex, toRenderPile) {\n    return (\n      <div\n        id={\"foundation_\" + pileIndex}\n        onDragOver={this.allowDrop.bind(this)}\n        onDrop={this.props.dropOnFoundations.bind(null, pileIndex)}\n        className=\"foundation-pile\"\n      >\n        {toRenderPile}\n      </div>\n    );\n  }\n\n  render() {\n    const foundationPiles = this.props.foundationPiles;\n    const toRenderPiles = foundationPiles.map((foundationPile, pileIndex) => {\n      const toProcessPile = foundationPile.slice();\n      const toRenderPile = toProcessPile.map(\n        this.generateCard.bind(null, pileIndex)\n      );\n      return this.generateFoundation(pileIndex, toRenderPile);\n    });\n    return <div className=\"foundation-piles\">{toRenderPiles}</div>;\n  }\n}\n\nexport default Foundations;\n","import React from \"react\";\nimport CardView from \"./CardView\";\nimport Card from \"./Card\";\n\nclass WastePiles extends React.Component {\n  generateCard(pileIndex, card, cardIndex) {\n    let draggable = true;\n    if (pileIndex === 0) {\n      card = new Card(null, \"black\", null, \"&#x1F0A0\");\n      draggable = false;\n    }\n    return (\n      <CardView\n        id={cardIndex}\n        draggable={draggable}\n        onClick={onclick}\n        className=\"waste-pile-card\"\n        card={card}\n      />\n    );\n  }\n\n  generatePile(wastePile, pileIndex) {\n    let onclick = this.props.resetWastePile;\n    if (pileIndex === 0) onclick = this.props.handleWastePile;\n    const toRenderPile = wastePile.map(this.generateCard.bind(null, pileIndex));\n    return (\n      <div onClick={onclick} className=\"waste-pile\">\n        {toRenderPile}\n      </div>\n    );\n  }\n\n  render() {\n    const wastePiles = this.props.wastePiles;\n    const toRenderWastePiles = wastePiles.map(this.generatePile.bind(this));\n    return <div className=\"waste-piles\">{toRenderWastePiles}</div>;\n  }\n}\n\nexport default WastePiles;\n","import React, { Component } from \"react\";\nimport deckGenerator from \"./deckGenerator\";\nimport Tableau from \"./Tableau\";\nimport Foundations from \"./Foundations\";\nimport WastePiles from \"./WastePiles\";\nimport { last } from \"lodash\";\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      piles: [],\n      wastePiles: [[], []],\n      foundationPiles: [[], [], [], []]\n    };\n  }\n\n  componentDidMount() {\n    this.setStates();\n  }\n\n  setStates() {\n    const deck = deckGenerator();\n    const deckCopy = deck.slice(0);\n    const piles = [];\n    for (let pileCount = 1; pileCount <= 7; pileCount++) {\n      const pile = [];\n      for (let cardCount = 0; cardCount < pileCount; cardCount++) {\n        pile.push(deckCopy[0]);\n        deckCopy.shift();\n      }\n      pile[pileCount - 1].open();\n      piles.push(pile);\n    }\n    const wastePiles = [deckCopy, []];\n    this.setState({ piles: piles, wastePiles: wastePiles });\n  }\n\n  resetWastePile() {\n    if (this.state.wastePiles[0].length) return;\n    const faceOnWastePile = this.state.wastePiles[1];\n    faceOnWastePile.reverse();\n    this.setState({ wastePiles: [faceOnWastePile, []] });\n  }\n\n  handleWastePile(event) {\n    const wastePile = this.state.wastePiles[0];\n    if (!wastePile.length) return;\n    const faceOnWastePile = this.state.wastePiles[1];\n    const clickedCard = wastePile[wastePile.length - 1];\n    clickedCard.open();\n    wastePile.pop();\n    faceOnWastePile.push(clickedCard);\n    this.setState({ wastePiles: [wastePile, faceOnWastePile] });\n  }\n\n  _canBePlayedOnPile(card, pileIndex) {\n    const lastCard = last(this.state.piles[pileIndex]);\n    if (!lastCard) return card.isKing();\n    return lastCard.canBePlacedForPile(card);\n  }\n\n  _dropOnPileFromWaste(piles, pileIndex) {\n    const wastePiles = this.state.wastePiles;\n    const draggedCard = last(wastePiles[1]);\n    if (!this._canBePlayedOnPile(draggedCard, pileIndex)) return;\n    wastePiles[1].pop();\n    piles[pileIndex].push(draggedCard);\n    this.setState({ piles: piles, wastePiles: wastePiles });\n  }\n\n  _dropOnPileFromPile(toDropCardIndexes, piles, pileIndex) {\n    const dragPileIndex = toDropCardIndexes[0];\n    const dragCardIndex = toDropCardIndexes[1];\n    const draggedCards = piles[dragPileIndex].slice(dragCardIndex);\n    if (!this._canBePlayedOnPile(draggedCards[0], pileIndex)) return;\n    const remainingCards = piles[dragPileIndex].slice(0, dragCardIndex);\n    remainingCards.length && remainingCards[remainingCards.length - 1].open();\n    piles[dragPileIndex] = remainingCards;\n    piles[pileIndex] = piles[pileIndex].concat(draggedCards);\n    this.setState({ piles: piles });\n  }\n\n  dropOnPile(pileIndex, event) {\n    event.preventDefault();\n    const toDropCardIndexes = event.dataTransfer.getData(\"text\").split(\"_\");\n    const piles = this.state.piles;\n    if (toDropCardIndexes.length === 1) {\n      return this._dropOnPileFromWaste(piles, pileIndex);\n    }\n    this._dropOnPileFromPile(toDropCardIndexes, piles, pileIndex);\n  }\n\n  _dropOnFoundationFromWaste(foundationPiles, foundationIndex) {\n    const wastePiles = this.state.wastePiles;\n    const draggedCard = last(wastePiles[1]);\n    if (!this._canBeDroppedOnFoundation(draggedCard, foundationIndex)) return;\n    foundationPiles[foundationIndex].push(draggedCard);\n    wastePiles[1].pop();\n    this.setState({\n      foundationPiles: foundationPiles,\n      wastePiles: wastePiles\n    });\n  }\n\n  _canBeDroppedOnFoundation(card, foundationIndex) {\n    const lastCard = last(this.state.foundationPiles[foundationIndex]);\n    if (!lastCard) return card.isAce();\n    return lastCard.canBePlacedForFoundation(card);\n  }\n\n  _dropOnFoundationFromPile(\n    toDropCardIndexes,\n    foundationPiles,\n    foundationIndex\n  ) {\n    const piles = this.state.piles;\n    const pileIndex = toDropCardIndexes[0];\n    const cardIndex = toDropCardIndexes[1];\n    const pileLength = piles[pileIndex].length;\n    if (pileLength !== +cardIndex + 1) return;\n    const card = piles[pileIndex][cardIndex];\n    if (!this._canBeDroppedOnFoundation(card, foundationIndex)) return;\n    foundationPiles[foundationIndex].push(card);\n    piles[pileIndex].pop();\n    pileLength - 1 && piles[pileIndex][pileLength - 2].open();\n    this.setState({ piles: piles, foundationPiles: foundationPiles });\n  }\n\n  dropOnFoundations(foundationIndex, event) {\n    event.preventDefault();\n    const toDropCardIndexes = event.dataTransfer.getData(\"text\").split(\"_\");\n    const foundationPiles = this.state.foundationPiles;\n    if (toDropCardIndexes.length === 1) {\n      return this._dropOnFoundationFromWaste(foundationPiles, foundationIndex);\n    }\n    this._dropOnFoundationFromPile(\n      toDropCardIndexes,\n      foundationPiles,\n      foundationIndex\n    );\n  }\n\n  hasWon() {\n    const foundationCards = this.state.foundationPiles.reduce((a, b) =>\n      a.concat(b)\n    );\n    if (foundationCards.length === 52)\n      document.getElementById(\"winning-message\").style.visibility = \"visible\";\n  }\n\n  render() {\n    this.hasWon();\n    return (\n      <div className=\"container\">\n        <div className=\"top-layer\">\n          <WastePiles\n            wastePiles={this.state.wastePiles}\n            resetWastePile={this.resetWastePile.bind(this)}\n            handleWastePile={this.handleWastePile.bind(this)}\n          />\n          <div className=\"winning-message\" id=\"winning-message\">\n            YOU WON\n          </div>\n          <Foundations\n            foundationPiles={this.state.foundationPiles}\n            dropOnFoundations={this.dropOnFoundations.bind(this)}\n          />\n        </div>\n        <Tableau\n          piles={this.state.piles}\n          dropOnPile={this.dropOnPile.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Game from \"./Game\";\n\nReactDOM.render(<Game />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}